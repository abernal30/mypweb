cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
library(dataclean)
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
#cat <- data[,col][!duplicated(data[,col])]
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
data2 <- asnum(data1)
head(charname(data2))
p <- 0.5
na_perc <- dataclean::summaryna(data2,.5)
head(na_perc)
di2 <- dim(na_perc)
data3 <- data2[,-na_perc[,2]]
data3_1 <- na.omit(data2)
head(data3_1)
data3 <- dataclean::repnas(data3,"median")
library(caret)
nzv <- nearZeroVar(data3,saveMetrics= TRUE)
head(nzv)
tail(nzv)
col<-"settlement_date"
t<-table(data3[,col])
t
t1<-as.data.frame(table(data3[,col]))
va1<-as.numeric(t1[1,1])
fre1<-as.numeric(t1[1,2])
va2<-as.numeric(t1[2,1])
fre2<-as.numeric(t1[2,2])
w <- which.max(t)
w
t[w]
max(t[-w])
t[w]/max(t[-w])
length(table(data3[,col]))
dim(data3)[1]
(length(table(data3[,col]))/dim(data3)[1])*100
nzv_2 <- nearZeroVar(data3)
nzv_2
data4<-data3[,-nzv_2]
descrCor <-  cor(data4)
highlyCorDescr <- findCorrelation(descrCor, cutoff = .8,names=T)
sub_col<-highlyCorDescr
sub_col
cw<-c("open_acc", "total_rev_hi_lim","total_acc","num_sats","total_bc_limit","num_rev_accts")
descrCor <-  data.frame(cor(data4[,cw]))
descrCor
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y,use="pairwise.complete.obs"))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(data4[,cw],upper.panel=panel.cor,na.action = na.omit)
descrCor <-  cor(data4)
highlyCorDescr <- findCorrelation(descrCor, cutoff = .75,names=T)
highlyCorDescr
highCorr <- sum(abs(descrCor[upper.tri(descrCor)]) > .999)
highCorr
data3_1 <- na.omit(data2)
head(data3_1,10)
head(data3_1)
data3_1 <- na.omit(data2)
head(data3_1)
data3_1 <- na.omit(data2)
head(data3_1)
tail(data3_1)
head(data3_1)
tail(data3_1)
head(data3_1)
tail(data3_1)
head(data3_1)
tail(data3_1)
View(data3_1)
library(dataclean)
library(openxlsx)
data <- read.xlsx("data/credit_semioriginal.xlsx", sheet =1)
str(data[,1:10])
col <- "loan_status"
data[,col][!duplicated(data[,col])]
categ(data,col)
le <- length(data[,col][!duplicated(data[,col])]
)
le
library(dplyr)
#col <- "loan_status"
data1 <- data %>%
filter(data[,"loan_status"] == "Fully Paid" | data[,"loan_status"] == "Charged Off")
di <- dim(data1)
di[1]
col <- "term"
cat <- categ(data,col)
cat
#col <- "term"
#cat <- data[,col][!duplicated(data[,col])]
#cat
ncat <- c(1:length(cat))
ncat
cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
library(dataclean)
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
#cat <- data[,col][!duplicated(data[,col])]
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
data2 <- asnum(data1)
head(charname(data2))
p <- 0.5
na_perc <- dataclean::summaryna(data2,.5)
head(na_perc)
di2 <- dim(na_perc)
data3 <- data2[,-na_perc[,2]]
data3_1 <- na.omit(data2)
head (data3_1)
tail(data3_1)
View(data3)
data3 <- data2[,-na_perc[,2]]
summary(data3)
data3_1 <- na.omit(data2)
View(data3_1)
data3 <- data2[,-na_perc[,2]]
summaryna(data3,.5)
install.packages("tidyverse")
install.packages("wooldridge")
install.packages("xts")
install.packages("quantmod")
df<-data.frame("Numeric_colum"=c(1,2,3),"character_column"=c("a","b","c"))
df
df<-data.frame("Numeric_col"=c(1,2,3),"character_col"=c("a","b","c"))
df
df<-data.frame("Num_col"=c(1,2,3),"Char_col"=c("a","b","c"))
df
library(wooldridge)
k4<-k401k
class(k4)
View(k4)
library(wooldridge)
k4<-k401k
class(k4)
colnames(k4)
```{r}
a<- 4
rm(a)
ticker<-"APPL"
ticker
# or
print(ticker)
class(ticker)
num<-4
print(num)
# To print the class of the object
print(class(num))
v1<-c(160,165,167,145,145)
print(v1)
class(v1)
v2<-c("Apple","Meta","Amazon")
print(v2)
class(v2)
v2[1]
v2[1:2]
v2<-v2[-2]
v2
v2[2]<-"Meta"
v2
v2<-c(v2,"Amazon_new")
v2
df<-data.frame("Num_col"=c(1,2,3),"Char_col"=c("a","b","c"))
df
library(wooldridge)
k4<-k401k
class(k4)
colnames(k4)
colnames(k4)[1]<-"prate_1"
colnames(k4)
colnames(k4)[c(1,3)]<-c("prate_1","totpart_1")
rownames(k4)[1:5]
k4[1,5]
k4$age[1:10]
df1<-k4[1:6,c("prate_1","totpart","age")]
colnames(k4)[1]<-"prate_1"
colnames(k4)
colnames(k4)[1]<-"prate_1"
colnames(k4)
colnames(k4)[1]<-"prate_1"
colnames(k4)
colnames(k4)[c(1,3)]<-c("prate_1","totpart_1")
colnames(k4)
rownames(k4)[1:5]
head(k4)
rownames(k4)[1:5]
df<-read.xlsx("data/credit_short.xlsx")
library(openxlsx)
library(dplyr)
library(caret)
library(openxlsx)
library(dplyr)
library(caret)
df<-read.xlsx("data/credit_short.xlsx")
library(openxlsx)
library(dplyr)
library(caret)
df<-read.xlsx("data/credit_short.xlsx")
co<-count(df,loan_status,sort =T )
co
# para saber cuantas cztegorias tiene term
summary(df)
df<-read.xlsx("data/credit_short.xlsx")
summary(df)
co<-count(df,loan_status,sort =T )
co
# para saber cuantas cztegorias tiene term
co<-count(df,loan_status,sort =T )
barplot(co$n , names.arg=co$loan_status , las=2 ,
col=c("red","blue","green","purple","black"),
ylim=c(0,700))
df2<-df %>%
filter(loan_status == "Fully Paid" | loan_status== "Charged Off")
count(df2,loan_status)
Default<-ifelse(df2$loan_status=="Fully Paid",0,1)
#Default<-factor(Default ,levels =c(1,0))
# combining default and df2
df3<-cbind(Default,df2)
# delete loan status, is the second colum
df4<-df3[,-2]
head(df4)
# Don´t forget to eliminate the column loan_status, because it would be duplicated with Default
set.seed (3)
dim<-dim(df4)
train_sample<-sample(dim[1],dim[1]*.8)
train <- df4[train_sample, ] # this is the 80% o the sample
test  <- df4[-train_sample, ] # This is 20%
head(train)
model<-glm(Default~. ,data=train,family=binomial())
summary(model)
df<-read.xlsx("data/credit_short.xlsx")
summary(df)
library(openxlsx)
library(dplyr)
library(caret)
df<-read.xlsx("data/credit_short.xlsx")
summary(df)
co<-count(df,loan_status,sort =T )
co
# para saber cuantas cztegorias tiene term
co<-count(df,loan_status,sort =T )
barplot(co$n , names.arg=co$loan_status , las=2 ,
col=c("red","blue","green","purple","black"),
ylim=c(0,700))
df2<-df %>%
filter(loan_status == "Fully Paid" | loan_status== "Charged Off")
count(df2,loan_status)
Default<-ifelse(df2$loan_status=="Fully Paid",0,1)
#Default<-factor(Default ,levels =c(1,0))
# combining default and df2
df3<-cbind(Default,df2)
# delete loan status, is the second colum
df4<-df3[,-2]
head(df4)
# Don´t forget to eliminate the column loan_status, because it would be duplicated with Default
#library(datapro)
#df5<-asnum(df4)
#head(df5)
set.seed (3)
dim<-dim(df4)
train_sample<-sample(dim[1],dim[1]*.8)
train <- df4[train_sample, ] # this is the 80% o the sample
test  <- df4[-train_sample, ] # This is 20%
head(train)
model<-glm(Default~. ,data=train,family=binomial())
summary(model)
predict<-predict(model,newdata = test,type = "response")
library(datapro)
df5<-asnum(df4)
summary(df5)
library(datapro)
library(openxlsx)
data <- read.xlsx("data/credit_semioriginal.xlsx", sheet =1)
str(data[,1:10])
col <- "loan_status"
data[,col][!duplicated(data[,col])]
categ(data,col)
le <- length(data[,col][!duplicated(data[,col])]
)
le
library(dplyr)
#col <- "loan_status"
data1 <- data %>%
filter(data[,"loan_status"] == "Fully Paid" | data[,"loan_status"] == "Charged Off")
di <- dim(data1)
di[1]
col <- "term"
cat <- categ(data,col)
cat
#col <- "term"
#cat <- data[,col][!duplicated(data[,col])]
#cat
ncat <- c(1:length(cat))
ncat
cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
#cat <- data[,col][!duplicated(data[,col])]
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
data2 <- asnum(data1)
library(datapro)
library(openxlsx)
data <- read.xlsx("data/credit_semioriginal.xlsx", sheet =1)
str(data[,1:10])
col <- "loan_status"
data[,col][!duplicated(data[,col])]
categ(data,col)
le <- length(data[,col][!duplicated(data[,col])]
)
le
library(dplyr)
#col <- "loan_status"
data1 <- data %>%
filter(data[,"loan_status"] == "Fully Paid" | data[,"loan_status"] == "Charged Off")
di <- dim(data1)
di[1]
col <- "term"
cat <- categ(data,col)
cat
#col <- "term"
#cat <- data[,col][!duplicated(data[,col])]
#cat
ncat <- c(1:length(cat))
ncat
cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
#cat <- data[,col][!duplicated(data[,col])]
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
data2 <- asnum(data1)
View(data1)
asnum
data2 <- asnum(data1)
library(datapro)
library(datapro)
library(openxlsx)
data <- read.xlsx("data/credit_semioriginal.xlsx", sheet =1)
str(data[,1:10])
col <- "loan_status"
data[,col][!duplicated(data[,col])]
categ(data,col)
le <- length(data[,col][!duplicated(data[,col])]
)
le
library(dplyr)
#col <- "loan_status"
data1 <- data %>%
filter(data[,"loan_status"] == "Fully Paid" | data[,"loan_status"] == "Charged Off")
di <- dim(data1)
di[1]
col <- "term"
cat <- categ(data,col)
cat
#col <- "term"
#cat <- data[,col][!duplicated(data[,col])]
#cat
ncat <- c(1:length(cat))
ncat
cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
#cat <- data[,col][!duplicated(data[,col])]
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
data2 <- asnum(data1)
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
ticker<-"^GSPC"
getSymbols(ticker, from="2019-10-20", to="2022-10-20")
all<-GSPC
dji<-all[,4]
dji<-Delt(all[,4])
la2<-stats::lag(dji,1)
la3<-stats::lag(dji,2)
dji<-cbind(dji,la2,la3)
dji<-na.omit(dji)
colnames(dji)<-c("SP500","SP500_lag1","SP500_lag2")
head(dji)
model<-lm(SP500~.,data =dji)
summary(model)
library(lmtest)
#perform Breusch-Pagan Test
bptest(model)
model<-lm(SP500~.,data =dji)
summary(model)
data<-openxlsx::read.xlsx("data/credit.xlsx")
dim<-dim(data)
View(data)
data<-read.xlsx("data/credit.xlsx")
data<-openxlsx::read.xlsx("data/credit.xlsx")
str(data[,1:10])
table(data[,"Default"])
library(quantmod)
getSymbols("AAPL")
class(AAPL)
getSymbols("AMZN", from="2020/04/01",to="2022/04/04")
getSymbols("BTC-USD")
bit<-BTC-USD[,4]
library(openxlsx)
data<-read.xlsz("data/credit_semioriginal.xlsx")
library(openxlsx)
data<-read.xlsx("data/credit_semioriginal.xlsx")
library(datapro)
library(openxlsx)
data<-read.xlsx("data/credit_semioriginal.xlsx")
str(data[,1:10])
col <- "loan_status"
data[,col][!duplicated(data[,col])]
categ(data,col)
le <- length(data[,col][!duplicated(data[,col])]
)
le
library(dplyr)
#col <- "loan_status"
data1 <- data %>%
filter(data[,"loan_status"] == "Fully Paid" | data[,"loan_status"] == "Charged Off")
di <- dim(data1)
di[1]
col <- "term"
cat <- categ(data,col)
cat
ncat <- c(1:length(cat))
ncat
cat[1]
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],data1[, col])
head(col_cat)
col_cat <- ifelse(data1[, col] == cat[1],ncat[1],ncat[2])
head(col_cat)
tail(col_cat)
data1[1,"mths_since_recent_bc"]*2
head(charname(data1))
tail(charname(data1))
le2 <- length(charname(data1))
le2
col <- "grade"
cat <- categ(data,col)
cat
col_cat2 <- tonum(data1,col)
head(col_cat2)
tail(col_cat2)
# Warning: this code may take a few minutes to finish, depending on the processor.
data2 <- datapro::asnum(data1)
